plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'pl.jwzp.seqre'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// DATABASE
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
//	implementation 'org.flywaydb:flyway-core'
//	runtimeOnly 'org.postgresql:postgresql'

	// MAIN
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// LOMBOK
//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'

	// MISC
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'

	// LOGGING
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

	// TEST
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.3.3'
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Main-Class': 'pl.jwzp.seqre.DummyProject'
	}

	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
	with jar
}

test {
	useJUnitPlatform()
}
